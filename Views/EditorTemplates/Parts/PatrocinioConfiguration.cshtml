@model Orchard.Patrocinadores.Models.PatrocinioConfigurationPart
@{
    Style.Require("Patrocionadores_Calendar").AtHead();
    Style.Require("Patrocionadores_CalendarPrint").AtHead();
    Style.Require("Patrocionadores_LocationWidget").AtHead();

    Script.Require("Patrocionadores_Calendar").AtFoot();
    Script.Require("Patrocionadores_Location").AtFoot();
}

@using(Script.Foot()) {
    <script type ="text/javascript">
        //<![CDATA[

        // Data - Patrocinadores
        var patrocinadores = @Html.Raw(Json.Encode(Model.Patrocinadores));

        // Data - Events
        var events = [
                    {
                        title: patrocinadores[0].Nome,
                        start: new Date(2012, 5, 15),
                        end: new Date(2012, 6, 14),
                        backgroundColor: LocationWidget.regions[0].color, 
                        textColor: '#FFFFFF !important',

                        id: 1,
                        idTipo: 1,
                        patrocinador: patrocinadores[0]
                    },
                    {
                        title: patrocinadores[1].Nome,
                        start: new Date(2012, 6, 1),
                        end: new Date(2012, 6, 31),
                        backgroundColor: LocationWidget.regions[1].color,
                        textColor: '#FFFFFF !important',
                        
                        id: 2,
                        idTipo: 2,
                        patrocinador: patrocinadores[1]
                    },
                    {
                        title: patrocinadores[2].Nome,
                        start: new Date(2012, 6, 15),
                        end: new Date(2012, 7, 14),
                        backgroundColor: LocationWidget.regions[0].color,
                        textColor: '#FFFFFF !important',

                        id: 3,
                        idTipo: 1,
                        patrocinador: patrocinadores[2]
                    },
                    {
                        title: patrocinadores[0].Nome,
                        start: new Date(2012, 6, 1),
                        end: new Date(2012, 6, 31),
                        backgroundColor: LocationWidget.regions[2].color,
                        textColor: '#FFFFFF !important',

                        id: 4,
                        idTipo: 3,
                        patrocinador: patrocinadores[0]
                    },
                    {
                        title: patrocinadores[3].Nome,
                        start: new Date(2012, 5, 1),
                        end: new Date(2012, 7, 31),
                        backgroundColor: LocationWidget.regions[3].color,
                        textColor: '#FFFFFF !important',

                        id: 5,
                        idTipo: 4,
                        patrocinador: patrocinadores[3]
                    }

        ];

        // Detail - Show
        function showDetail(startDate, endDate, idDetail) {
            var dlg = $("div#dialog");

            // Title

            if (parseInt(idDetail) > 0) {
                // Alteração
                var itemData = jQuery.grep(events, function (item, index) {
                    return item.id == idDetail;
                })[0];

                dlg.find('#DataInicio').datepicker("setDate", itemData.start);
                dlg.find('#DataFim').datepicker("setDate", itemData.end);

                dlg.find('#IDPatrocinador').val(itemData.title);
            } else {
                // Novo

                dlg.find('#DataInicio').datepicker("setDate", startDate);
                dlg.find('#DataFim').datepicker("setDate", endDate);

                //dlg.find('#IDPatrocinador').val(Patrocinador)
            }

            dlg.dialog({
                open: function () {
                    jQuery('input:first').blur();
                    jQuery('#ui-datepicker-div').hide();
                },
            });
        }

        // Calendar - 
        var calendar = null;

        function drawCalendar(data) {
            if(calendar == null) {
                // New Calendar
                calendar = $('#calendar').fullCalendar({
                    selectable: true,
                    select: function (startDate, endDate, allDay, jsEvent, view) {
                        // Open Dialog
                        showDetail(startDate, endDate);
                    },
                    eventClick: function(calEvent, jsEvent, view) {
                        showDetail(calEvent._start, calEvent._end, calEvent.id);

                        // change the border color just for fun
                        $(this).css('border-color', 'red');

                    },
                    events: data
                });
            } else {
                // Reuse Calendar
                var cal = $('#calendar')
                cal.fullCalendar('removeEvents');
                cal.fullCalendar( 'addEventSource', data );
            }
        }

        function filterEvents(data, zonaIds) {
            if(!jQuery.isArray(zonaIds)) zonaIds = [zonaIds];

            var itemData = jQuery.grep(events, function (item, index) {
                return jQuery.inArray(item.idTipo.toString(), zonaIds) >= 0;
            });

            return itemData;
        }

        // Document - Init
        $(document).ready(function () { 

            // Calendar - Filter
            LocationWidget.getNew($('#LocationFilter'), true, function(sender, multipleSelection) {
                var values = $(sender).val();

                if(values == null || !(values.length >= 0)) values = ["1"];

                drawCalendar(filterEvents(events, values));
            });

            // Calendar - Init
            //drawCalendar(events);

            // Edit - Fields
            LocationWidget.getNew($('#LocationEditWidget'), false, function(sender, multipleSelection) {
                var values = $(sender).val();
            });
            $("#DataInicio").datepicker({ dateFormat: 'yy-mm-dd' });
            $("#DataFim").datepicker({ dateFormat: 'yy-mm-dd' });
        });
        //]]>
    </script>
}
<h2>Patrocinadores</h2>
<fieldset>
    <div>
        <span id="LocationFilter"></span>
    </div>
    <div id='calendar'></div>
</fieldset>
<div id="dialog" title="Patrocínio" style="display:none;">
    <input type="hidden" id="" name="" value="" />
    <fieldset>
        <label>Localização</label>
        <div id="LocationEditWidget"></div>
    </fieldset>
    <fieldset>
        <label>Início</label>
        <input type="text" id="DataInicio" />
    </fieldset>
    <fieldset>
        <label>Fim</label>
        <input type="text" id="DataFim" />
    </fieldset>
    <fieldset>
        @Html.LabelFor(widget => widget.IDPatrocinador, T("Patrocinador"))
        @Html.DropDownList("IDPatrocinador", new SelectList(Model.Patrocinadores, "ID", "Nome"))
    </fieldset>
</div>


